services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: bitnami/kafka:3.4
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
    depends_on:
      zookeeper:
        condition: service_healthy
    volumes:
      - kafka_data:/bitnami
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 1s
      retries: 3

  mock-generator:
    build:
      context: ./mock_data
    environment:
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  tratador-limpeza:
    build:
      context: ./tratador_limpeza
    environment:
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    volumes:
      - ./artifacts:/app/artifacts

  tratador-filtragem:
    build:
      context: ./tratador_filtragem
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  tratador-metrica:
    build:
      context: ./tratador_metrica
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./databases_mock:/app/databases_mock 

  tratador-media:
    build:
      context: ./tratador_media
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./databases_mock:/app/databases_mock 
  
  tratador-hist:
    build:
      context: ./historic
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./historic:/app
    working_dir: /app

  tratador-merge:
    build:
      context: ./tratador_merge
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./databases_mock:/app/databases_mock

  # api:
  #   build:
  #     context: ./api
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - tratador-metrica
  #   command: ["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8000"]

  # dashboard:
  #   build:
  #     context: ./dashboard
  #   ports:
  #     - "8501:8501"
  #   depends_on:
  #     - api
  #   command: ["streamlit", "run", "dashboard.py", "--server.port=8501", "--server.address=0.0.0.0"]

volumes:
  zookeeper_data:
  kafka_data:
  redis_data: